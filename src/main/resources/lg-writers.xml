<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/batch 
		http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-3.2.xsd
		
		">
	
	<bean id="lgMsoItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
		<property name="shouldDeleteIfExists" value="true" />
		<property name="resource" value="file://${lgExtract.base.directory.location}/#{jobParameters['zipcode']}/clu/MSO.txt" />
		<property name="encoding" value="${lgExtract.files.encoding}" />
		<property name="lineSeparator" value="&#xD;&#xA;" />
		<property name="lineAggregator">
			<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="|" />
				<property name="fieldExtractor">
					<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="msoID, msoName" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>  
	
	<bean id="lgHeadendItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
		<property name="shouldDeleteIfExists" value="true" />
		<property name="resource" value="file://${lgExtract.base.directory.location}/#{jobParameters['zipcode']}/clu/Headend.txt" />
		<property name="encoding" value="${lgExtract.files.encoding}" />
		<property name="lineSeparator" value="&#xD;&#xA;" />
		<property name="lineAggregator">
			<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="|" />
				<property name="fieldExtractor">
					<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="headendID, dmaCode, dmaRank, systemName, headendCity, headendState, headendTimezone, observesDST, msoID, dmaName, deviceType, headendName" />
					</bean>
				</property>
			</bean>
		</property>
	</bean> 
	
	<bean id="lgSourceItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
		<property name="shouldDeleteIfExists" value="true" />
		<property name="resource" value="file://${lgExtract.base.directory.location}/#{jobParameters['zipcode']}/clu/Source.txt" />
		<property name="encoding" value="${lgExtract.files.encoding}" />
		<property name="lineSeparator" value="&#xD;&#xA;" />
		<property name="lineAggregator">
			<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="|" />
				<property name="fieldExtractor">
					<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="sourceID, shortName, fullName, callLetters, officialCallSign, affiliate1, affiliate2, affiliate3, sourceType, timezone, dst, city, state, country, otaChannelNumber, digitalSource, digitalChannelNumber, psipVctActive, virtualChannelNumber, analogPartnerID, dmaRank, dmaName, ownedOperated, primaryLanguage, tvRatingTypeUsed, movieRatingBoardUsed, hdtvYn, isSap" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	
	<bean id="lgZipcodesItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
		<property name="shouldDeleteIfExists" value="true" />
		<property name="resource" value="file://${lgExtract.base.directory.location}/#{jobParameters['zipcode']}/clu/ZipCodes.txt" />
		<property name="encoding" value="${lgExtract.files.encoding}" />
		<property name="lineSeparator" value="&#xD;&#xA;" />
		<property name="lineAggregator">
			<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="|" />
				<property name="fieldExtractor">
					<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="headendID, zipCode, cityName, stateName" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	
	<bean id="lgChannellineupItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
		<property name="shouldDeleteIfExists" value="true" />
		<property name="resource" value="file://${lgExtract.base.directory.location}/#{jobParameters['zipcode']}/clu/Channel_Lineup.txt" />
		<property name="encoding" value="${lgExtract.files.encoding}" />
		<property name="lineSeparator" value="&#xD;&#xA;" />
		<property name="lineAggregator">
			<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="|" />
				<property name="fieldExtractor">
					<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="headendID, sourceID, callLetters, channelDevice, channelNumber, effectiveDate, expirationDate, effectiveFlag" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	
	<bean id="lgProgramGenresItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
		<property name="shouldDeleteIfExists" value="true" />
		<property name="resource" value="file://${lgExtract.base.directory.location}/#{jobParameters['zipcode']}/ss/Program_Genres.txt" />
		<property name="encoding" value="${lgExtract.files.encoding}" />
		<property name="lineSeparator" value="&#xD;&#xA;" />
		<property name="lineAggregator">
			<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="|" />
				<property name="fieldExtractor">
					<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="programID, genre2" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	
	<bean id="lgProgramCreditsItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
		<property name="shouldDeleteIfExists" value="true" />
		<property name="resource" value="file://${lgExtract.base.directory.location}/#{jobParameters['zipcode']}/ss/Program_Credits.txt" />
		<property name="encoding" value="${lgExtract.files.encoding}" />
		<property name="lineSeparator" value="&#xD;&#xA;" />
		<property name="lineAggregator">
			<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="|" />
				<property name="fieldExtractor">
					<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="programID, creditID, creditType, firstName, lastName, fullCreditName, partName, sequenceNumber" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	
	<bean id="lgProgramItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
		<property name="shouldDeleteIfExists" value="true" />
		<property name="resource" value="file://${lgExtract.base.directory.location}/#{jobParameters['zipcode']}/ss/Program.txt" />
		<property name="encoding" value="${lgExtract.files.encoding}" />
		<property name="lineSeparator" value="&#xD;&#xA;" />
		<property name="lineAggregator">
			<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="|" />
				<property name="fieldExtractor">
					<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="showType, programID, seriesID, longTitle, mediumTitle, shortTitle, gridTitle, grid2Title, category, subtitle, episodeTitle, episodeNumber, runtime, releaseYear, programLanguage, syndicated, originalAirDate, eventDate, hdtvLevel, audioLevel, movieType, starRating, longDescription, smartCopyLong, smartCopyBrief" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	
	<bean id="lgSourceGenreItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
		<property name="shouldDeleteIfExists" value="true" />
		<property name="resource" value="file://${lgExtract.base.directory.location}/#{jobParameters['zipcode']}/ss/Source_Genre.txt" />
		<property name="encoding" value="${lgExtract.files.encoding}" />
		<property name="lineSeparator" value="&#xD;&#xA;" />
		<property name="lineAggregator">
			<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="|" />
				<property name="fieldExtractor">
					<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="sourceID, Genre" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	
	<bean id="lgScheduleItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
		<property name="shouldDeleteIfExists" value="true" />
		<property name="resource" value="file://${lgExtract.base.directory.location}/#{jobParameters['zipcode']}/ss/Schedule.txt" />
		<property name="encoding" value="${lgExtract.files.encoding}" />
		<property name="lineSeparator" value="&#xD;&#xA;" />
		<property name="lineAggregator">
			<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="|" />
				<property name="fieldExtractor">
					<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="sourceID, startDate, startTime, isTimeApproximate, duration, programID, seriesID, tvRating, tvAdvisory, programShowingType, captionType, audioLevelName, sap, colorType, programAiringType, subtitled, joinedInProgress, subjectToBlackout, aspectRatio, dsv, partNumber, partTotal, hdtvLevelName, syndicated" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	
	<bean id="lgProgramTvRatingsItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
		<property name="shouldDeleteIfExists" value="true" />
		<property name="resource" value="file://${lgExtract.base.directory.location}/#{jobParameters['zipcode']}/ss/Program_TV_Ratings.txt" />
		<property name="encoding" value="${lgExtract.files.encoding}" />
		<property name="lineSeparator" value="&#xD;&#xA;" />
		<property name="lineAggregator">
			<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="|" />
				<property name="fieldExtractor">
					<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="programID, TvRatingType, TvRating, TvAdvisory" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	
	<bean id="lgProgramMovieRatingsItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
		<property name="shouldDeleteIfExists" value="true" />
		<property name="resource" value="file://${lgExtract.base.directory.location}/#{jobParameters['zipcode']}/ss/Program_Movie_Ratings.txt" />
		<property name="encoding" value="${lgExtract.files.encoding}" />
		<property name="lineSeparator" value="&#xD;&#xA;" />
		<property name="lineAggregator">
			<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="|" />
				<property name="fieldExtractor">
					<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="programID, movieRatingType, movieRating, movieRatingReason" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	
</beans>